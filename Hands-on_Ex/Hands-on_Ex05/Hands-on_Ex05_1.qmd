---
title: "Hands-on Exercise 5.1: Building Ternary Plot with R"
date: "February 2, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  warning: false
---

## Getting Started

### Install and loading R packages.

-   [ggtern](), a ggplot extension specially designed to plot ternary diagrams. The package will be used to plot static ternary plots.

-   [Plotly R](https://plotly.com/r/), an R package for creating interactive web-based graphs via plotlyâ€™s JavaScript graphing library, plotly.js . The plotly R libary contains the ggplotly function, which will convert ggplot2 figures into a Plotly object.

```{r}
pacman::p_load('plotly', 'tidyverse', 'ggtern')
# require(devtools)
# install_version("ggtern", version = "3.4.1", repos = "http://cran.us.r-project.org")
# library(ggtern)
```

### Importing the data

```{r}
pop_data <- read_csv("../../data/respopagsex2000to2018_tidy.csv") 
```

### Preparing the data

Using the mutate() function of dplyr package to derive three new measures, namely: young, active, and old.

```{r}
#| code-fold: true
#| code-summary: "Click to view the code."

#Deriving the young, economy active and old measures
agpop_mutated <- pop_data %>%
  mutate(`Year` = as.character(Year))%>%
  spread(AG, Population) %>%
  mutate(YOUNG = rowSums(.[4:8]))%>%
  mutate(ACTIVE = rowSums(.[9:16]))  %>%
  mutate(OLD = rowSums(.[17:21])) %>%
  mutate(TOTAL = rowSums(.[22:24])) %>%
  filter(Year == 2018)%>%
  filter(TOTAL > 0)
```

## Plotting Ternary Diagram with R

### Plotting a static ternary diagram

Use `ggtern()` function of ggtern package to create a simple ternary plot.

```{r}
#| code-fold: true
#| code-summary: "Click to view the code."

#Building the static ternary plot
ggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +
  geom_point()
```

```{r}
#| code-fold: true
#| code-summary: "Click to view the code."

#Building the static ternary plot
ggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +
  geom_point() +
  labs(title="Population structure, 2015") +
  theme_rgbw()
```

### Plotting an interative ternary diagram

The code below create an interactive ternary plot using `plot_ly()` function of Plotly R.

```{r}
#| code-fold: true
#| code-summary: "Click to view the code."

# reusable function for creating annotation object
label <- function(txt) {
  list(
    text = txt, 
    x = 0.1, y = 1,
    ax = 0, ay = 0,
    xref = "paper", yref = "paper", 
    align = "center",
    font = list(family = "serif", size = 15, color = "white"),
    bgcolor = "#b3b3b3", bordercolor = "black", borderwidth = 2
  )
}

# reusable function for axis formatting
axis <- function(txt) {
  list(
    title = txt, tickformat = ".0%", tickfont = list(size = 10)
  )
}

ternaryAxes <- list(
  aaxis = axis("Young"), 
  baxis = axis("Active"), 
  caxis = axis("Old")
)

# Initiating a plotly visualization 
plot_ly(
  agpop_mutated, 
  a = ~YOUNG, 
  b = ~ACTIVE, 
  c = ~OLD, 
  color = I("black"), 
  type = "scatterternary"
) %>%
  layout(
    annotations = label("Ternary Markers"), 
    ternary = ternaryAxes
  )
```
